name: Lighthouse CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
      REDIS_URL: redis://localhost:6379
      NEXTAUTH_SECRET: test-secret-for-ci
      NEXTAUTH_URL: http://localhost:3000
      SENTRY_DSN: ""
      NODE_ENV: production
      CI: true
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 10s
        ports:
          - 5432:5432
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 10s
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client redis-tools
      - name: Wait for services
        run: |
          timeout 30 bash -c 'until pg_isready -h localhost -p 5432; do sleep 1; done'
          timeout 30 bash -c 'until redis-cli -h localhost -p 6379 ping; do sleep 1; done'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Setup CI database
        run: node scripts/setup-ci-db.js setup
      - name: Generate Prisma client
        run: npx prisma generate
      - name: Push database schema
        run: npx prisma db push --accept-data-loss
      - name: Build application
        run: npm run build
      - name: Start server and wait
        run: |
          npm start &
          SERVER_PID=$!
          npx wait-on http://localhost:3000 --timeout=60000
          echo "Server started with PID: $SERVER_PID"
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: http://localhost:3000
          configPath: ./lighthouserc.json
          budgetPath: ./lighthouse-budget.json
      - name: Stop Node server
        if: always()
        run: |
          pkill -f "tsx server.ts" || true
          pkill -f "node.*server" || true
          sleep 2
